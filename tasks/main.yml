---
- name: Install required packages
  apt:
    name:
      - curl
      - jq
      - python3-requests

- name: Create temporary file for my hostvars
  tempfile:
    suffix: .json
  register: tmp
  changed_when: false

- name: Write relevant vars to temporary file
  copy:
    content: |
      {{ {
        "pdns_auth_api_zones": pdns_auth_api_zones,
        "pdns_auth_api_default_metadata": pdns_auth_api_default_metadata | default(None),
      } | to_json() }}
    dest: "{{ tmp.path }}"
  changed_when: false

- name: Configure zones
  script: >
    scripts/upsert-zone "{{ pdns_auth_api_connect | mandatory }}" "{{ pdns_auth_api_server }}" "{{ tmp.path }}" "{{ item }}"
  environment:
    apikey: "{{ pdns_auth_api_key }}"
  register: out
  changed_when: "'CHANGED' in out.stdout | default('')"
  with_items: "{{ pdns_auth_api_zones | list }}"

- name: Configure metadata for zones
  script: >
    scripts/upsert-domain-metadata "{{ pdns_auth_api_connect | mandatory }}" "{{ pdns_auth_api_server }}" "{{ tmp.path }}" "{{ item }}"
  environment:
    apikey: "{{ pdns_auth_api_key }}"
  register: out
  changed_when: "'CHANGED' in out.stdout | default('')"
  with_items: "{{ pdns_auth_api_zones | list }}"

- include_tasks: upsert-records.yml
  loop: "{{ pdns_auth_api_zones | list }}"
  loop_control:
    loop_var: zone

- name: Delete unknown zones
  script: >
    scripts/delete-zones "{{ pdns_auth_api_connect }}" "{{ pdns_auth_api_server }}" "{{ tmp.path }}"
  environment:
    apikey: "{{ pdns_auth_api_key }}"
  register: out
  changed_when: "'CHANGED' in out.stdout | default('')"
  when: pdns_auth_api_remove_unknown_zones

- name: Remove temporary file
  file:
    path: tmp.path
    state: absent
  changed_when: false
