#!/bin/bash

set -o nounset
umask 177

# Parameters
url="${1}/api/v1/servers/${2}"
# $2 is the server
apikey="${apikey:-}"
zonename="${3}"
# All RRsets are passed via an env variable because the quotes are mangled when
# specifying the JSON on the command line.
rrsets="${rrsets:-}"

rrsets='[{"records": [{"content": "1.2.3.4", "disabled": false, "set-ptr": false}, {"content": "5.6.7.8"}], "type": "A", "name": "efcloud.co", "ttl": 500}, {"records": [{"content": "4.5.6.7"}], "type": "A", "name": "*.efcloud.co", "ttl": 4000}]'

# This generates CSV in style [rrsetName],[rrsetType]
expected="$(echo "${rrsets}" | jq -r '.[] | [ .name + ".", .type ] | join(",")' | sort)"
current="$(curl -s -H "X-API-Key: ${apikey}" "${url}/zones/${zonename}." | jq -r '.rrsets[] | [ .name, .type ] | join(",")' | sort)"

# We should remove the RRsets found in "current", but not in "expected"
toRemove="$(comm -3 -1 <(echo "${expected}") <(echo "${current}"))"

changed=0
for rem in ${toRemove}; do
	name="$(echo "${rem}" | cut -d',' -f1)"
	typ="$(echo "${rem}" | cut -d',' -f2)"

	ret="$(curl -s -X PATCH -o /dev/null -w "%{http_code}" \
		--data "{ \"rrsets\": [ { \"name\": \"${name}\", \"type\": \"${typ}\", \"changetype\": \"DELETE\" } ] }" \
		-H "X-API-Key: ${apikey}" "${url}/zones/${zonename}.")"

	[ "${ret}" = 204 ] || exit "${ret}"
	changed=1
done

if [ "${changed}" = 1 ]; then
	echo CHANGED
fi
