#!/usr/bin/env bash

set -e
set -o pipefail
set -o nounset
umask 177

# Parameters
url="${1}/api/v1/servers/${2}"
# $2 is the server
apikey="${apikey:-}"
tmpfile="${3}"
zonename="${4}"

# Parse the rest of the parameters
cleanup() {
	echo "${1}" | jq 'del(."API-RECTIFY") | del(."NSEC3NARROW") | del(."NSEC3PARAM") | del(."PRESIGNED") | del(."SOA-EDIT") | del(."SOA-EDIT-API")'
}

# Assign defaults
meta="$(jq --arg zonename "${zonename}" '.pdns_auth_api_zones[$zonename].metadata // {}' < "${tmpfile}")"
if [ "$(jq -r '.pdns_auth_api_default_metadata' < "${tmpfile}")" != null ]; then
	meta="$(jq --slurpfile meta <(echo "${meta}") '.pdns_auth_api_default_metadata * $meta[]' < "${tmpfile}")"
fi

if [ "${meta}" != null ]; then
	meta="$(cleanup "${meta}")"
fi

# Get the current state
current="$(curl -s -H "X-API-Key: ${apikey}" "${url}/zones/${zonename}./metadata" | jq 'map({(.kind): .metadata}) | add')"

# Upsert the current state into the API
for key in $(echo "${meta}" | jq -r 'to_entries[] | .key'); do
	desired="$(echo "${meta}" | jq -r --arg varname "${key}" '.[$varname]')"
	if [ "${desired}" != "$(echo "${current}" | jq -r --arg varname "${key}" '.[$varname]')" ]; then
		body="$(echo "${desired}" | jq --arg kind "${key}" '{ "kind": $kind, "metadata": . }')"
		ret="$(curl -s -o /dev/stderr -w "%{http_code}" -X PUT -H "X-API-Key: ${apikey}" --data @<(echo "${body}") "${url}/zones/${zonename}./metadata/${key}")"
		if [ "${ret}" != 200 ]; then
			echo "curl returned HTTP code ${ret} when upserting ${key} metadata"
			exit 1
		fi
		echo CHANGED
	fi
done

# Delete unknown metadata
for key in $(cleanup "${current}" | jq -r 'to_entries[] | .key'); do
	if [ "$(echo "${meta}" | jq -r --arg varname "${key}" '.[$varname]')" = 'null' ]; then
		ret="$(curl -s -o /dev/stderr -w "%{http_code}" -X DELETE -H "X-API-Key: ${apikey}" "${url}/zones/${zonename}./metadata/${key}")"
		if [ "${ret}" != 200 ]; then
			echo "curl returned HTTP code ${ret} when deleting ${key} metadata"
			exit 1
		fi
		echo CHANGED
	fi
done
